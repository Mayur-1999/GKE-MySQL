name: 'Two Tier: GKE + MySQL'
on:
 workflow_dispatch:
permissions:
  contents: read
  id-token: write
env:
  PROJECT_ID: qwiklabs-gcp-03-268f66aeb131
  INSTANCE_NAME: test-instance
  SERVICE_ACC_NAME: ksa-cloud-sql
  DATABASE_NAME: test-database
  GKE_CLUSTER: test-cluster
  REGION: us-central1
  DATABASE_USER_NAME: db-user
  DATABASE_PASSWORD: db-password

jobs:     
  terraform1:
    name: 'Terraform_INFRA'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: /home/runner/work/GKE-MySQL/GKE-MySQL
    steps:
            
      - name: Checkout
        uses: actions/checkout@v2

      - name: Terraform Init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.SA_KEY }}

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Fmt
        run: terraform fmt

      - name: Terraform Plan
        id: plan
        run: terraform plan 
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.SA_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.SA_KEY }} 

  terraform2:
    name: 'Deploy_app'
    needs: terraform1
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: /home/runner/work/GKE-MySQL/GKE-MySQL

    steps:
            
      - name: Checkout
        uses: actions/checkout@v2

      - name: gcloud 
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.SA_KEY }}

      - run: |-
            gcloud --quiet auth configure-docker

      - name: docker build and push into artifact registry
        run: |
          cd app
          gcloud artifacts repositories create gke-cloud-sql-repo \
            --project=${{PROJECT_ID}} \
            --repository-format=docker \
            --location=us-central1 \
            --description="GKE Quickstart sample app"
          gcloud builds submit \
            --tag us-central1-docker.pkg.dev/${{PROJECT_ID}}/gke-cloud-sql-repo/gke-sql .

      - run: |-
            gcloud --quiet auth configure-docker

      - name: connect to kubernetes
      - run: |
          gcloud components install gke-gcloud-auth-plugin
          gke-gcloud-auth-plugin --version
          gcloud config set project "${{env.PROJECT_ID}}"
          gcloud container clusters get-credentials "${{env.GKE_CLUSTER}}" --region="${{env.REGION}}"
      
      - name: Deploy  deployment
      - run: |
          kubectl apply -f service-account.yaml
          gcloud iam service-accounts add-iam-policy-binding \
            --role="roles/iam.workloadIdentityUser" \
            --member="serviceAccount:${{env.PROJECT_ID}}.svc.id.goog[default/ksa-cloud-sql]" \
            gke-service-account@${{env.PROJECT_ID}}.iam.gserviceaccount.com
          kubectl annotate serviceaccount \
            ksa-cloud-sql \
            iam.gke.io/gcp-service-account=gke-service-account@${{env.PROJECT_ID}}.iam.gserviceaccount.com
          kubectl create secret generic gke-cloud-sql-secrets \
            --from-literal=database=${{DATABASE_NAME}} \
            --from-literal=username=${{DATABASE_USER_NAME}} \
            --from-literal=password=${{DATABASE_PASSWORD}}
          kubectl apply -f deployment.yaml
